<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FBD Links - Visitor Tracking</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
        }
        .container {
            background: rgba(255, 255, 255, 0.1);
            padding: 40px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }
        h1 {
            text-align: center;
            margin-bottom: 30px;
            font-size: 2.5em;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        .status {
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            text-align: center;
            font-weight: bold;
        }
        .status.success {
            background: rgba(76, 175, 80, 0.3);
            border: 1px solid rgba(76, 175, 80, 0.5);
        }
        .status.error {
            background: rgba(244, 67, 54, 0.3);
            border: 1px solid rgba(244, 67, 54, 0.5);
        }
        .status.loading {
            background: rgba(255, 193, 7, 0.3);
            border: 1px solid rgba(255, 193, 7, 0.5);
        }
        .info {
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
        }
        .code-display {
            font-family: 'Courier New', monospace;
            font-size: 1.2em;
            color: #ffd700;
            font-weight: bold;
        }
        button {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            border: none;
            color: white;
            padding: 12px 30px;
            font-size: 16px;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: block;
            margin: 20px auto;
        }
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }
        button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🔗 FBD Links</h1>
        <div id="status"></div>
        <div class="info">
            <h3>Welcome to FBD Links Visitor Tracking</h3>
            <p>Your visit is being recorded automatically with a unique tracking code.</p>
            <p>Generated Code: <span id="generatedCode" class="code-display">-</span></p>
        </div>
        <button onclick="recordVisit()" id="recordBtn">Record Visit Manually</button>
    </div>

    <script>
        // Generate a random alphanumeric code
        function generateRandomCode() {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
            let result = '';
            for (let i = 0; i < 8; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        }

        // Show status message
        function showStatus(message, type) {
            const statusEl = document.getElementById('status');
            statusEl.innerHTML = message;
            statusEl.className = 'status ' + type;
        }

        // Record visit function
        async function recordVisit() {
            const code = generateRandomCode();
            document.getElementById('generatedCode').textContent = code;
            
            showStatus('Recording visit...', 'loading');
            document.getElementById('recordBtn').disabled = true;

            try {
                const response = await fetch('/api/visit', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ code: code })
                });

                if (response.ok) {
                    const result = await response.text();
                    showStatus('✅ ' + result + ' (Code: ' + code + ')', 'success');
                } else {
                    throw new Error('Failed to record visit');
                }
            } catch (error) {
                showStatus('❌ Error recording visit: ' + error.message, 'error');
            } finally {
                document.getElementById('recordBtn').disabled = false;
            }
        }

        // Automatically record visit when page loads
        window.addEventListener('load', () => {
            setTimeout(recordVisit, 1000); // Wait 1 second then auto-record
        });
    </script>
</body>
</html>
